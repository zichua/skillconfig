传输层 （只有主机才有的层次）

1. 传输层的功能
    1. 传输层提供进程和进程之间的逻辑通信。
    2. 复用和分用
    3. 传输层对收到的报文进行差错检测
    4. 传输层的两种协议

2. 传输层的两个协议
    1. 面向连接的传输控制协议 TCP
        ：1. 传送数据之前必须建立连接，数据传送结束后要释放连接。
          2. 不提供广播/多播服务。
          3. 由于TCP要提供可靠地面向连接的传输服务，银子不可避免增加了许多开销：确认、流量控制、计时器、连接管理。
          4. 特点：可靠、面向连接、时延大、适用于大文件。
    2. 无连接的用户数据报协议 UDP
        ：1. 传送数据之前不需要建立连接，收到UDP报文后也不需要给出任何确认。
          2. 特点：不可靠，无连接，时延小，适用于小文件。

3. 传输层的寻址和端口
    1. 复用：应用层所有的应用进程都可以通过传输层再传输到网络层。
    2. 分用：传输层从网络层收到数据后交付指明的应用进程。
    3. 端口：是传输层的SAP，标识主机中的应用进程。（逻辑端口、软件端口）。
    4. 端口号只有本地意义，在因特网中不同计算机的相同端口是没有联系的。
    5. 端口长度为16bit，能表示65536个不同的端口号。
        端口号：
            1. 服务器使用的端口号：
                1. 熟知端口号：给TCP/IP最重要的一些应用程序，让所有用户都知道。0~1023
                2. 登记端口号：为没有熟知端口号的应用程序使用的。 1024~49151
            2. 客户端使用的端口号：仅在客户进程运行时才动态选择。
            3. 
        应用程序 | FTP | TELNET | SMTP | DNS | TFTP | HTTP | SNMP |
       熟知端口号|  21 |  23    |  25  |  53 |  69  |  80  |  161 |

    6. 在网络中采用发送方和接收方的套接字组合来识别端点，
        套接字唯一标识了网络中的一个主机和它上面的一个进程。
        套接字socket = （主机IP地址，端口号）。

4. UDP协议
    1. 用户数据报协议 UDP：只在IP数据报服务之上增加了很少功能，即复用分用和差错检测功能。
    2. 特点：
        1. UDP是无连接的，减少开销和发送数据之前的时延。
        2. UDP使用最大努力交付，即不保证可靠传输。
        3. UDP是面向报文的，适合一次性传输少量数据的网络应用。 应用层给UDP多长的报文，UDP就照样发送，即一次发一个完整报文。
        4. UDP无拥塞控制，适合很多实时应用。
        5. UDP首部开销小，8Byte，TCP 20Byte。
    3. UDP首部格式：

    -----------------------------------------------------------------
    |       16位源端口号           |        16位目的端口号             |
    -----------------------------------------------------------------                  （8 Byte）
    |       16位UDP长度           |        16位UDP检验和              |
    -----------------------------------------------------------------
    |                              数据                             |
    -----------------------------------------------------------------
    4. UDP校验（==============）

5. TCP协议
    1. TCP是面向连接（虚连接）的传输层协议。
    2. 每一条TCP连接只能有两个端点，每一条TCP连接只能是点对点的。
    3. TCP提供可靠交付的服务，无差错，不丢失，不重复，按序到达。 （可靠有序，不丢不重）
    4. TCP提供全双工通信：
        1. 发送缓存：准备发送的数据、已发送但尚未收到确认的数据。
        2. 接收缓存：按序到达但尚未被接受应用程序读取的数据、不按序到达的数据。
    5. TCP面向字节流：TCP把应用程序交下来的数据看成仅仅是遗传的无结构字节流。

    6. TCP报文段首部格式

    --------------------------------------------------------------------------------
    |                   源端口               |             目的端口                   |
    --------------------------------------------------------------------------------
    |                                 序号                                          |
    --------------------------------------------------------------------------------
    |                                确认号                                         |           （20 Byte的固定首部）
    --------------------------------------------------------------------------------
    | 数据偏移 | 保留 |URG|ACK|PSH|RST|SYN|FIN|             窗口                      |
    ---------------------------------------------------------------------------------
    |               校验和                   |          紧急指针                     |
    --------------------------------------------------------------------------------
    |     选项                                        |  填充                       |
    --------------------------------------------------------------------------------

    1. 序号： 在一个TCP连接中传送的字节流中的每一个字节都按顺序编号，本字段表示本报文段所发送数据的每一个字节的序号。
    2. 确认号 ： 期望收到对方下一个报文段的第一个数据字节的序号。若确认号为N，则序号N-1为止的所有数据都正确收到。
    3. 数据偏移（首部长度）：TCP报文段的数据起始处距离TCP报文段的起始处有多远，以4Byte为单位，1=4Byte。
    4. 紧急位UGR ： =1时，标明此报文段中由紧急数据，是高优先级的数据，应尽快传输，不用在缓存理排队，配合紧急指针字段使用。
    5. 确认位ACK ： =1时，确认号有效，在连接建立后，所有传送的报文段都必须把ACK置为1.
    6. 推送位PSH ： =1时，接受方尽快交付接受应用进程，不再等到缓存填满在想上交付。
    7. 复位RST ： =1时，表明TCP连接中出现严重差错，必须释放连接，然后再重新建立传输链接。
    8. 同步位SYN： =1时，表明是一个连接请求/连接接受报文。
    9. 终止位FIN： =1时，表明此报文端发送方数据已发完，要求释放连接。
    10. 窗口：指发送本报文段的乙方的接收窗口，即现在允许对方发送的数据量。
    11. 校验和：检验首部和数据，检验时要加上12Byte的伪首部，第四个字段为6.
    



